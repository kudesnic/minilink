security:
    encoders:
        App\Security\User:
            algorithm: auto
        App\Entity\User:
            algorithm: auto
    role_hierarchy:
        ROLE_USER:   ROLE_VISITOR
        ROLE_SUPER_ADMIN:   ROLE_USER

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        main_user_provider:
            entity:
                class: App\Entity\User
                property: email

    firewalls:

        login:
            pattern: ^/api/login
            provider: main_user_provider
            stateless: true
            anonymous: true
            json_login:
                check_path:               /api/login
                username_path:            email
                password_path:            password
                success_handler:          lexik_jwt_authentication.handler.authentication_success
                failure_handler:          lexik_jwt_authentication.handler.authentication_failure

        login_en:
            pattern: ^/api/en/login
            provider: main_user_provider
            stateless: true
            anonymous: true
            json_login:
                check_path:               /api/en/login
                username_path:            email
                password_path:            password
                success_handler:          lexik_jwt_authentication.handler.authentication_success
                failure_handler:          lexik_jwt_authentication.handler.authentication_failure

        login_ru:
            pattern: ^/api/ru/login
            provider: main_user_provider
            stateless: true
            anonymous: true
            json_login:
                check_path:               /api/ru/login
                username_path:            email
                password_path:            password
                success_handler:          lexik_jwt_authentication.handler.authentication_success
                failure_handler:          lexik_jwt_authentication.handler.authentication_failure

        login_pl:
            pattern: ^/api/pl/login
            provider: main_user_provider
            stateless: true
            anonymous: true
            json_login:
                check_path:               /api/pl/login
                username_path:            email
                password_path:            password
                success_handler:          lexik_jwt_authentication.handler.authentication_success
                failure_handler:          lexik_jwt_authentication.handler.authentication_failure

        refresh:
            pattern: ^.*\/api\/[a-z]{2}\/token\/refresh|^/api/token/refresh
            provider: main_user_provider
            stateless: true
            anonymous: true
        api:
            pattern:   ^/api
            provider: main_user_provider
            stateless: true
            anonymous: lazy
            guard:
                authenticators:
                - lexik_jwt_authentication.jwt_token_authenticator
        track:
            pattern: ^/track
            provider: main_user_provider
            stateless: true
            anonymous: true

            #provider: users_in_memory

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
    - { path: ^api/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: ^api/login-for-activation$, role: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: ^api/register$, role: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: ^api/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: ^api/token/refresh, roles: IS_AUTHENTICATED_ANONYMOUSLY }
    # link tracking
    - { path: ^track, roles: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: ^api, roles: IS_AUTHENTICATED_FULLY }
   # access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
